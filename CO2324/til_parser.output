Terminals unused in grammar

    tPRIVATE
    tUNARY


Grammar

    0 $accept: file $end

    1 file: fdecls program
    2     | fdecls
    3     | program
    4     | ε

    5 fdecls: fdecls fdecl
    6       | fdecl

    7 fdecl: '(' tEXTERNAL type tIDENTIFIER ')'
    8      | '(' tFORWARD type tIDENTIFIER ')'
    9      | '(' tPUBLIC type tIDENTIFIER ')'
   10      | '(' tPUBLIC type tIDENTIFIER expr ')'
   11      | '(' tPUBLIC tVAR tIDENTIFIER expr ')'
   12      | '(' tPUBLIC tIDENTIFIER expr ')'
   13      | decl

   14 type: referable_type
   15     | ref_type_void

   16 referable_type: tTYPE_INT
   17               | tTYPE_DOUBLE
   18               | tTYPE_STRING
   19               | function_type
   20               | ref_type

   21 function_type: '(' function_return_type ')'
   22              | '(' function_return_type '(' types ')' ')'

   23 function_return_type: type
   24                     | tTYPE_VOID

   25 types: types type
   26      | type

   27 ref_type: referable_type '!'

   28 ref_type_void: ref_type_void '!'
   29              | tTYPE_VOID '!'

   30 program: '(' tPROGRAM decls_insts ')'

   31 decls_insts: decls insts
   32            | decls
   33            | insts
   34            | ε

   35 decls: decls decl
   36      | decl

   37 decl: '(' type tIDENTIFIER ')'
   38     | '(' type tIDENTIFIER expr ')'
   39     | '(' tVAR tIDENTIFIER expr ')'

   40 insts: insts inst
   41      | inst

   42 inst: expr
   43     | '(' tPRINT exprs ')'
   44     | '(' tPRINTLN exprs ')'
   45     | '(' tSTOP tINTEGER ')'
   46     | '(' tSTOP ')'
   47     | '(' tNEXT tINTEGER ')'
   48     | '(' tNEXT ')'
   49     | '(' tRETURN expr ')'
   50     | '(' tRETURN ')'
   51     | '(' tIF expr inst ')'
   52     | '(' tIF expr inst inst ')'
   53     | '(' tLOOP expr inst ')'
   54     | block

   55 block: '(' tBLOCK decls_insts ')'

   56 exprs: exprs expr
   57      | expr

   58 expr: tINTEGER
   59     | tDOUBLE
   60     | tSTRING
   61     | tNULL
   62     | '(' tREAD ')'
   63     | '(' '-' expr ')'
   64     | '(' '+' expr ')'
   65     | '(' '~' expr ')'
   66     | '(' '+' expr expr ')'
   67     | '(' '-' expr expr ')'
   68     | '(' '*' expr expr ')'
   69     | '(' '/' expr expr ')'
   70     | '(' '%' expr expr ')'
   71     | '(' '<' expr expr ')'
   72     | '(' '>' expr expr ')'
   73     | '(' tGE expr expr ')'
   74     | '(' tLE expr expr ')'
   75     | '(' tNE expr expr ')'
   76     | '(' tEQ expr expr ')'
   77     | '(' tAND expr expr ')'
   78     | '(' tOR expr expr ')'
   79     | '(' tOBJECTS expr ')'
   80     | '(' tSIZEOF expr ')'
   81     | lval
   82     | '(' tSET lval expr ')'
   83     | '(' '?' lval ')'
   84     | '(' '@' exprs ')'
   85     | '(' '@' ')'
   86     | '(' expr exprs ')'
   87     | '(' expr ')'
   88     | function_def

   89 lval: tIDENTIFIER
   90     | '(' tINDEX expr expr ')'

   91 function_def: '(' tFUNCTION '(' function_return_type ')' decls_insts ')'
   92             | '(' tFUNCTION '(' function_return_type function_args ')' decls_insts ')'

   93 function_args: function_args function_arg
   94              | function_arg

   95 function_arg: '(' type tIDENTIFIER ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27 28 29
    '%' (37) 70
    '(' (40) 7 8 9 10 11 12 21 22 30 37 38 39 43 44 45 46 47 48 49 50 51 52 53 55 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 83 84 85 86 87 90 91 92 95
    ')' (41) 7 8 9 10 11 12 21 22 30 37 38 39 43 44 45 46 47 48 49 50 51 52 53 55 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 83 84 85 86 87 90 91 92 95
    '*' (42) 68
    '+' (43) 64 66
    '-' (45) 63 67
    '/' (47) 69
    '<' (60) 71
    '>' (62) 72
    '?' (63) 83
    '@' (64) 84 85
    '~' (126) 65
    error (256)
    tINTEGER <i> (258) 45 47 58
    tDOUBLE <d> (259) 59
    tIDENTIFIER <s> (260) 7 8 9 10 11 12 37 38 39 89 95
    tSTRING <s> (261) 60
    tTYPE_INT (262) 16
    tTYPE_DOUBLE (263) 17
    tTYPE_STRING (264) 18
    tTYPE_VOID (265) 24 29
    tEXTERNAL (266) 7
    tFORWARD (267) 8
    tPUBLIC (268) 9 10 11 12
    tPRIVATE (269)
    tVAR (270) 11 39
    tBLOCK (271) 55
    tLOOP (272) 53
    tSTOP (273) 45 46
    tNEXT (274) 47 48
    tRETURN (275) 49 50
    tIF (276) 51 52
    tREAD (277) 62
    tNULL (278) 61
    tSET (279) 82
    tINDEX (280) 90
    tOBJECTS (281) 79
    tSIZEOF (282) 80
    tFUNCTION (283) 91 92
    tPROGRAM (284) 30
    tPRINT (285) 43
    tPRINTLN (286) 44
    tAND (287) 77
    tOR (288) 78
    tGE (289) 73
    tLE (290) 74
    tEQ (291) 76
    tNE (292) 75
    tUNARY (293)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    file (53)
        on left: 1 2 3 4
        on right: 0
    fdecls <sequence> (54)
        on left: 5 6
        on right: 1 2 5
    fdecl <node> (55)
        on left: 7 8 9 10 11 12 13
        on right: 5 6
    type <type> (56)
        on left: 14 15
        on right: 7 8 9 10 23 25 26 37 38 95
    referable_type <type> (57)
        on left: 16 17 18 19 20
        on right: 14 27
    function_type <type> (58)
        on left: 21 22
        on right: 19
    function_return_type <type> (59)
        on left: 23 24
        on right: 21 22 91 92
    types <type_vector> (60)
        on left: 25 26
        on right: 22 25
    ref_type <type> (61)
        on left: 27
        on right: 20
    ref_type_void <type> (62)
        on left: 28 29
        on right: 15 28
    program <node> (63)
        on left: 30
        on right: 1 3
    decls_insts <block> (64)
        on left: 31 32 33 34
        on right: 30 55 91 92
    decls <sequence> (65)
        on left: 35 36
        on right: 31 32 35
    decl <node> (66)
        on left: 37 38 39
        on right: 13 35 36
    insts <sequence> (67)
        on left: 40 41
        on right: 31 33 40
    inst <node> (68)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 40 41 51 52 53
    block <block> (69)
        on left: 55
        on right: 54
    exprs <sequence> (70)
        on left: 56 57
        on right: 43 44 56 84 86
    expr <expression> (71)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
        on right: 10 11 12 38 39 42 49 51 52 53 56 57 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 86 87 90
    lval <lvalue> (72)
        on left: 89 90
        on right: 81 82 83
    function_def <expression> (73)
        on left: 91 92
        on right: 88
    function_args <sequence> (74)
        on left: 93 94
        on right: 92 93
    function_arg <node> (75)
        on left: 95
        on right: 93 94


State 0

    0 $accept: • file $end

    '('  shift, and go to state 1

    $default  reduce using rule 4 (file)

    file     go to state 2
    fdecls   go to state 3
    fdecl    go to state 4
    program  go to state 5
    decl     go to state 6


State 1

    7 fdecl: '(' • tEXTERNAL type tIDENTIFIER ')'
    8      | '(' • tFORWARD type tIDENTIFIER ')'
    9      | '(' • tPUBLIC type tIDENTIFIER ')'
   10      | '(' • tPUBLIC type tIDENTIFIER expr ')'
   11      | '(' • tPUBLIC tVAR tIDENTIFIER expr ')'
   12      | '(' • tPUBLIC tIDENTIFIER expr ')'
   30 program: '(' • tPROGRAM decls_insts ')'
   37 decl: '(' • type tIDENTIFIER ')'
   38     | '(' • type tIDENTIFIER expr ')'
   39     | '(' • tVAR tIDENTIFIER expr ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    tEXTERNAL     shift, and go to state 11
    tFORWARD      shift, and go to state 12
    tPUBLIC       shift, and go to state 13
    tVAR          shift, and go to state 14
    tPROGRAM      shift, and go to state 15
    '('           shift, and go to state 16

    type            go to state 17
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 2

    0 $accept: file • $end

    $end  shift, and go to state 22


State 3

    1 file: fdecls • program
    2     | fdecls •
    5 fdecls: fdecls • fdecl

    '('  shift, and go to state 1

    $default  reduce using rule 2 (file)

    fdecl    go to state 23
    program  go to state 24
    decl     go to state 6


State 4

    6 fdecls: fdecl •

    $default  reduce using rule 6 (fdecls)


State 5

    3 file: program •

    $default  reduce using rule 3 (file)


State 6

   13 fdecl: decl •

    $default  reduce using rule 13 (fdecl)


State 7

   16 referable_type: tTYPE_INT •

    $default  reduce using rule 16 (referable_type)


State 8

   17 referable_type: tTYPE_DOUBLE •

    $default  reduce using rule 17 (referable_type)


State 9

   18 referable_type: tTYPE_STRING •

    $default  reduce using rule 18 (referable_type)


State 10

   29 ref_type_void: tTYPE_VOID • '!'

    '!'  shift, and go to state 25


State 11

    7 fdecl: '(' tEXTERNAL • type tIDENTIFIER ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    '('           shift, and go to state 16

    type            go to state 26
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 12

    8 fdecl: '(' tFORWARD • type tIDENTIFIER ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    '('           shift, and go to state 16

    type            go to state 27
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 13

    9 fdecl: '(' tPUBLIC • type tIDENTIFIER ')'
   10      | '(' tPUBLIC • type tIDENTIFIER expr ')'
   11      | '(' tPUBLIC • tVAR tIDENTIFIER expr ')'
   12      | '(' tPUBLIC • tIDENTIFIER expr ')'

    tIDENTIFIER   shift, and go to state 28
    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    tVAR          shift, and go to state 29
    '('           shift, and go to state 16

    type            go to state 30
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 14

   39 decl: '(' tVAR • tIDENTIFIER expr ')'

    tIDENTIFIER  shift, and go to state 31


State 15

   30 program: '(' tPROGRAM • decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 34 (decls_insts)

    decls_insts   go to state 38
    decls         go to state 39
    decl          go to state 40
    insts         go to state 41
    inst          go to state 42
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 16

   21 function_type: '(' • function_return_type ')'
   22              | '(' • function_return_type '(' types ')' ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 47
    '('           shift, and go to state 16

    type                  go to state 48
    referable_type        go to state 18
    function_type         go to state 19
    function_return_type  go to state 49
    ref_type              go to state 20
    ref_type_void         go to state 21


State 17

   37 decl: '(' type • tIDENTIFIER ')'
   38     | '(' type • tIDENTIFIER expr ')'

    tIDENTIFIER  shift, and go to state 50


State 18

   14 type: referable_type •
   27 ref_type: referable_type • '!'

    '!'  shift, and go to state 51

    $default  reduce using rule 14 (type)


State 19

   19 referable_type: function_type •

    $default  reduce using rule 19 (referable_type)


State 20

   20 referable_type: ref_type •

    $default  reduce using rule 20 (referable_type)


State 21

   15 type: ref_type_void •
   28 ref_type_void: ref_type_void • '!'

    '!'  shift, and go to state 52

    $default  reduce using rule 15 (type)


State 22

    0 $accept: file $end •

    $default  accept


State 23

    5 fdecls: fdecls fdecl •

    $default  reduce using rule 5 (fdecls)


State 24

    1 file: fdecls program •

    $default  reduce using rule 1 (file)


State 25

   29 ref_type_void: tTYPE_VOID '!' •

    $default  reduce using rule 29 (ref_type_void)


State 26

    7 fdecl: '(' tEXTERNAL type • tIDENTIFIER ')'

    tIDENTIFIER  shift, and go to state 53


State 27

    8 fdecl: '(' tFORWARD type • tIDENTIFIER ')'

    tIDENTIFIER  shift, and go to state 54


State 28

   12 fdecl: '(' tPUBLIC tIDENTIFIER • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 56
    lval          go to state 45
    function_def  go to state 46


State 29

   11 fdecl: '(' tPUBLIC tVAR • tIDENTIFIER expr ')'

    tIDENTIFIER  shift, and go to state 57


State 30

    9 fdecl: '(' tPUBLIC type • tIDENTIFIER ')'
   10      | '(' tPUBLIC type • tIDENTIFIER expr ')'

    tIDENTIFIER  shift, and go to state 58


State 31

   39 decl: '(' tVAR tIDENTIFIER • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 59
    lval          go to state 45
    function_def  go to state 46


State 32

   58 expr: tINTEGER •

    $default  reduce using rule 58 (expr)


State 33

   59 expr: tDOUBLE •

    $default  reduce using rule 59 (expr)


State 34

   89 lval: tIDENTIFIER •

    $default  reduce using rule 89 (lval)


State 35

   60 expr: tSTRING •

    $default  reduce using rule 60 (expr)


State 36

   61 expr: tNULL •

    $default  reduce using rule 61 (expr)


State 37

   37 decl: '(' • type tIDENTIFIER ')'
   38     | '(' • type tIDENTIFIER expr ')'
   39     | '(' • tVAR tIDENTIFIER expr ')'
   43 inst: '(' • tPRINT exprs ')'
   44     | '(' • tPRINTLN exprs ')'
   45     | '(' • tSTOP tINTEGER ')'
   46     | '(' • tSTOP ')'
   47     | '(' • tNEXT tINTEGER ')'
   48     | '(' • tNEXT ')'
   49     | '(' • tRETURN expr ')'
   50     | '(' • tRETURN ')'
   51     | '(' • tIF expr inst ')'
   52     | '(' • tIF expr inst inst ')'
   53     | '(' • tLOOP expr inst ')'
   55 block: '(' • tBLOCK decls_insts ')'
   62 expr: '(' • tREAD ')'
   63     | '(' • '-' expr ')'
   64     | '(' • '+' expr ')'
   65     | '(' • '~' expr ')'
   66     | '(' • '+' expr expr ')'
   67     | '(' • '-' expr expr ')'
   68     | '(' • '*' expr expr ')'
   69     | '(' • '/' expr expr ')'
   70     | '(' • '%' expr expr ')'
   71     | '(' • '<' expr expr ')'
   72     | '(' • '>' expr expr ')'
   73     | '(' • tGE expr expr ')'
   74     | '(' • tLE expr expr ')'
   75     | '(' • tNE expr expr ')'
   76     | '(' • tEQ expr expr ')'
   77     | '(' • tAND expr expr ')'
   78     | '(' • tOR expr expr ')'
   79     | '(' • tOBJECTS expr ')'
   80     | '(' • tSIZEOF expr ')'
   82     | '(' • tSET lval expr ')'
   83     | '(' • '?' lval ')'
   84     | '(' • '@' exprs ')'
   85     | '(' • '@' ')'
   86     | '(' • expr exprs ')'
   87     | '(' • expr ')'
   90 lval: '(' • tINDEX expr expr ')'
   91 function_def: '(' • tFUNCTION '(' function_return_type ')' decls_insts ')'
   92             | '(' • tFUNCTION '(' function_return_type function_args ')' decls_insts ')'

    tINTEGER      shift, and go to state 32
    tDOUBLE       shift, and go to state 33
    tIDENTIFIER   shift, and go to state 34
    tSTRING       shift, and go to state 35
    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    tVAR          shift, and go to state 14
    tBLOCK        shift, and go to state 60
    tLOOP         shift, and go to state 61
    tSTOP         shift, and go to state 62
    tNEXT         shift, and go to state 63
    tRETURN       shift, and go to state 64
    tIF           shift, and go to state 65
    tREAD         shift, and go to state 66
    tNULL         shift, and go to state 36
    tSET          shift, and go to state 67
    tINDEX        shift, and go to state 68
    tOBJECTS      shift, and go to state 69
    tSIZEOF       shift, and go to state 70
    tFUNCTION     shift, and go to state 71
    tPRINT        shift, and go to state 72
    tPRINTLN      shift, and go to state 73
    tAND          shift, and go to state 74
    tOR           shift, and go to state 75
    '~'           shift, and go to state 76
    tGE           shift, and go to state 77
    tLE           shift, and go to state 78
    tEQ           shift, and go to state 79
    tNE           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    '%'           shift, and go to state 87
    '('           shift, and go to state 88
    '?'           shift, and go to state 89
    '@'           shift, and go to state 90

    type            go to state 17
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21
    expr            go to state 91
    lval            go to state 45
    function_def    go to state 46


State 38

   30 program: '(' tPROGRAM decls_insts • ')'

    ')'  shift, and go to state 92


State 39

   31 decls_insts: decls • insts
   32            | decls •
   35 decls: decls • decl

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 32 (decls_insts)

    decl          go to state 93
    insts         go to state 94
    inst          go to state 42
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 40

   36 decls: decl •

    $default  reduce using rule 36 (decls)


State 41

   33 decls_insts: insts •
   40 insts: insts • inst

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 95

    $default  reduce using rule 33 (decls_insts)

    inst          go to state 96
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 42

   41 insts: inst •

    $default  reduce using rule 41 (insts)


State 43

   54 inst: block •

    $default  reduce using rule 54 (inst)


State 44

   42 inst: expr •

    $default  reduce using rule 42 (inst)


State 45

   81 expr: lval •

    $default  reduce using rule 81 (expr)


State 46

   88 expr: function_def •

    $default  reduce using rule 88 (expr)


State 47

   24 function_return_type: tTYPE_VOID •
   29 ref_type_void: tTYPE_VOID • '!'

    '!'  shift, and go to state 25

    $default  reduce using rule 24 (function_return_type)


State 48

   23 function_return_type: type •

    $default  reduce using rule 23 (function_return_type)


State 49

   21 function_type: '(' function_return_type • ')'
   22              | '(' function_return_type • '(' types ')' ')'

    '('  shift, and go to state 97
    ')'  shift, and go to state 98


State 50

   37 decl: '(' type tIDENTIFIER • ')'
   38     | '(' type tIDENTIFIER • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 99

    expr          go to state 100
    lval          go to state 45
    function_def  go to state 46


State 51

   27 ref_type: referable_type '!' •

    $default  reduce using rule 27 (ref_type)


State 52

   28 ref_type_void: ref_type_void '!' •

    $default  reduce using rule 28 (ref_type_void)


State 53

    7 fdecl: '(' tEXTERNAL type tIDENTIFIER • ')'

    ')'  shift, and go to state 101


State 54

    8 fdecl: '(' tFORWARD type tIDENTIFIER • ')'

    ')'  shift, and go to state 102


State 55

   62 expr: '(' • tREAD ')'
   63     | '(' • '-' expr ')'
   64     | '(' • '+' expr ')'
   65     | '(' • '~' expr ')'
   66     | '(' • '+' expr expr ')'
   67     | '(' • '-' expr expr ')'
   68     | '(' • '*' expr expr ')'
   69     | '(' • '/' expr expr ')'
   70     | '(' • '%' expr expr ')'
   71     | '(' • '<' expr expr ')'
   72     | '(' • '>' expr expr ')'
   73     | '(' • tGE expr expr ')'
   74     | '(' • tLE expr expr ')'
   75     | '(' • tNE expr expr ')'
   76     | '(' • tEQ expr expr ')'
   77     | '(' • tAND expr expr ')'
   78     | '(' • tOR expr expr ')'
   79     | '(' • tOBJECTS expr ')'
   80     | '(' • tSIZEOF expr ')'
   82     | '(' • tSET lval expr ')'
   83     | '(' • '?' lval ')'
   84     | '(' • '@' exprs ')'
   85     | '(' • '@' ')'
   86     | '(' • expr exprs ')'
   87     | '(' • expr ')'
   90 lval: '(' • tINDEX expr expr ')'
   91 function_def: '(' • tFUNCTION '(' function_return_type ')' decls_insts ')'
   92             | '(' • tFUNCTION '(' function_return_type function_args ')' decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tREAD        shift, and go to state 66
    tNULL        shift, and go to state 36
    tSET         shift, and go to state 67
    tINDEX       shift, and go to state 68
    tOBJECTS     shift, and go to state 69
    tSIZEOF      shift, and go to state 70
    tFUNCTION    shift, and go to state 71
    tAND         shift, and go to state 74
    tOR          shift, and go to state 75
    '~'          shift, and go to state 76
    tGE          shift, and go to state 77
    tLE          shift, and go to state 78
    tEQ          shift, and go to state 79
    tNE          shift, and go to state 80
    '>'          shift, and go to state 81
    '<'          shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    '/'          shift, and go to state 86
    '%'          shift, and go to state 87
    '('          shift, and go to state 55
    '?'          shift, and go to state 89
    '@'          shift, and go to state 90

    expr          go to state 91
    lval          go to state 45
    function_def  go to state 46


State 56

   12 fdecl: '(' tPUBLIC tIDENTIFIER expr • ')'

    ')'  shift, and go to state 103


State 57

   11 fdecl: '(' tPUBLIC tVAR tIDENTIFIER • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 104
    lval          go to state 45
    function_def  go to state 46


State 58

    9 fdecl: '(' tPUBLIC type tIDENTIFIER • ')'
   10      | '(' tPUBLIC type tIDENTIFIER • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 105

    expr          go to state 106
    lval          go to state 45
    function_def  go to state 46


State 59

   39 decl: '(' tVAR tIDENTIFIER expr • ')'

    ')'  shift, and go to state 107


State 60

   55 block: '(' tBLOCK • decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 34 (decls_insts)

    decls_insts   go to state 108
    decls         go to state 39
    decl          go to state 40
    insts         go to state 41
    inst          go to state 42
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 61

   53 inst: '(' tLOOP • expr inst ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 109
    lval          go to state 45
    function_def  go to state 46


State 62

   45 inst: '(' tSTOP • tINTEGER ')'
   46     | '(' tSTOP • ')'

    tINTEGER  shift, and go to state 110
    ')'       shift, and go to state 111


State 63

   47 inst: '(' tNEXT • tINTEGER ')'
   48     | '(' tNEXT • ')'

    tINTEGER  shift, and go to state 112
    ')'       shift, and go to state 113


State 64

   49 inst: '(' tRETURN • expr ')'
   50     | '(' tRETURN • ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 114

    expr          go to state 115
    lval          go to state 45
    function_def  go to state 46


State 65

   51 inst: '(' tIF • expr inst ')'
   52     | '(' tIF • expr inst inst ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 116
    lval          go to state 45
    function_def  go to state 46


State 66

   62 expr: '(' tREAD • ')'

    ')'  shift, and go to state 117


State 67

   82 expr: '(' tSET • lval expr ')'

    tIDENTIFIER  shift, and go to state 34
    '('          shift, and go to state 118

    lval  go to state 119


State 68

   90 lval: '(' tINDEX • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 120
    lval          go to state 45
    function_def  go to state 46


State 69

   79 expr: '(' tOBJECTS • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 121
    lval          go to state 45
    function_def  go to state 46


State 70

   80 expr: '(' tSIZEOF • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 122
    lval          go to state 45
    function_def  go to state 46


State 71

   91 function_def: '(' tFUNCTION • '(' function_return_type ')' decls_insts ')'
   92             | '(' tFUNCTION • '(' function_return_type function_args ')' decls_insts ')'

    '('  shift, and go to state 123


State 72

   43 inst: '(' tPRINT • exprs ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    exprs         go to state 124
    expr          go to state 125
    lval          go to state 45
    function_def  go to state 46


State 73

   44 inst: '(' tPRINTLN • exprs ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    exprs         go to state 126
    expr          go to state 125
    lval          go to state 45
    function_def  go to state 46


State 74

   77 expr: '(' tAND • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 127
    lval          go to state 45
    function_def  go to state 46


State 75

   78 expr: '(' tOR • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 128
    lval          go to state 45
    function_def  go to state 46


State 76

   65 expr: '(' '~' • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 129
    lval          go to state 45
    function_def  go to state 46


State 77

   73 expr: '(' tGE • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 130
    lval          go to state 45
    function_def  go to state 46


State 78

   74 expr: '(' tLE • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 131
    lval          go to state 45
    function_def  go to state 46


State 79

   76 expr: '(' tEQ • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 132
    lval          go to state 45
    function_def  go to state 46


State 80

   75 expr: '(' tNE • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 133
    lval          go to state 45
    function_def  go to state 46


State 81

   72 expr: '(' '>' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 134
    lval          go to state 45
    function_def  go to state 46


State 82

   71 expr: '(' '<' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 135
    lval          go to state 45
    function_def  go to state 46


State 83

   64 expr: '(' '+' • expr ')'
   66     | '(' '+' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 136
    lval          go to state 45
    function_def  go to state 46


State 84

   63 expr: '(' '-' • expr ')'
   67     | '(' '-' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 137
    lval          go to state 45
    function_def  go to state 46


State 85

   68 expr: '(' '*' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 138
    lval          go to state 45
    function_def  go to state 46


State 86

   69 expr: '(' '/' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 139
    lval          go to state 45
    function_def  go to state 46


State 87

   70 expr: '(' '%' • expr expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 140
    lval          go to state 45
    function_def  go to state 46


State 88

   21 function_type: '(' • function_return_type ')'
   22              | '(' • function_return_type '(' types ')' ')'
   62 expr: '(' • tREAD ')'
   63     | '(' • '-' expr ')'
   64     | '(' • '+' expr ')'
   65     | '(' • '~' expr ')'
   66     | '(' • '+' expr expr ')'
   67     | '(' • '-' expr expr ')'
   68     | '(' • '*' expr expr ')'
   69     | '(' • '/' expr expr ')'
   70     | '(' • '%' expr expr ')'
   71     | '(' • '<' expr expr ')'
   72     | '(' • '>' expr expr ')'
   73     | '(' • tGE expr expr ')'
   74     | '(' • tLE expr expr ')'
   75     | '(' • tNE expr expr ')'
   76     | '(' • tEQ expr expr ')'
   77     | '(' • tAND expr expr ')'
   78     | '(' • tOR expr expr ')'
   79     | '(' • tOBJECTS expr ')'
   80     | '(' • tSIZEOF expr ')'
   82     | '(' • tSET lval expr ')'
   83     | '(' • '?' lval ')'
   84     | '(' • '@' exprs ')'
   85     | '(' • '@' ')'
   86     | '(' • expr exprs ')'
   87     | '(' • expr ')'
   90 lval: '(' • tINDEX expr expr ')'
   91 function_def: '(' • tFUNCTION '(' function_return_type ')' decls_insts ')'
   92             | '(' • tFUNCTION '(' function_return_type function_args ')' decls_insts ')'

    tINTEGER      shift, and go to state 32
    tDOUBLE       shift, and go to state 33
    tIDENTIFIER   shift, and go to state 34
    tSTRING       shift, and go to state 35
    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 47
    tREAD         shift, and go to state 66
    tNULL         shift, and go to state 36
    tSET          shift, and go to state 67
    tINDEX        shift, and go to state 68
    tOBJECTS      shift, and go to state 69
    tSIZEOF       shift, and go to state 70
    tFUNCTION     shift, and go to state 71
    tAND          shift, and go to state 74
    tOR           shift, and go to state 75
    '~'           shift, and go to state 76
    tGE           shift, and go to state 77
    tLE           shift, and go to state 78
    tEQ           shift, and go to state 79
    tNE           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    '%'           shift, and go to state 87
    '('           shift, and go to state 88
    '?'           shift, and go to state 89
    '@'           shift, and go to state 90

    type                  go to state 48
    referable_type        go to state 18
    function_type         go to state 19
    function_return_type  go to state 49
    ref_type              go to state 20
    ref_type_void         go to state 21
    expr                  go to state 91
    lval                  go to state 45
    function_def          go to state 46


State 89

   83 expr: '(' '?' • lval ')'

    tIDENTIFIER  shift, and go to state 34
    '('          shift, and go to state 118

    lval  go to state 141


State 90

   84 expr: '(' '@' • exprs ')'
   85     | '(' '@' • ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 142

    exprs         go to state 143
    expr          go to state 125
    lval          go to state 45
    function_def  go to state 46


State 91

   86 expr: '(' expr • exprs ')'
   87     | '(' expr • ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 144

    exprs         go to state 145
    expr          go to state 125
    lval          go to state 45
    function_def  go to state 46


State 92

   30 program: '(' tPROGRAM decls_insts ')' •

    $default  reduce using rule 30 (program)


State 93

   35 decls: decls decl •

    $default  reduce using rule 35 (decls)


State 94

   31 decls_insts: decls insts •
   40 insts: insts • inst

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 95

    $default  reduce using rule 31 (decls_insts)

    inst          go to state 96
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 95

   43 inst: '(' • tPRINT exprs ')'
   44     | '(' • tPRINTLN exprs ')'
   45     | '(' • tSTOP tINTEGER ')'
   46     | '(' • tSTOP ')'
   47     | '(' • tNEXT tINTEGER ')'
   48     | '(' • tNEXT ')'
   49     | '(' • tRETURN expr ')'
   50     | '(' • tRETURN ')'
   51     | '(' • tIF expr inst ')'
   52     | '(' • tIF expr inst inst ')'
   53     | '(' • tLOOP expr inst ')'
   55 block: '(' • tBLOCK decls_insts ')'
   62 expr: '(' • tREAD ')'
   63     | '(' • '-' expr ')'
   64     | '(' • '+' expr ')'
   65     | '(' • '~' expr ')'
   66     | '(' • '+' expr expr ')'
   67     | '(' • '-' expr expr ')'
   68     | '(' • '*' expr expr ')'
   69     | '(' • '/' expr expr ')'
   70     | '(' • '%' expr expr ')'
   71     | '(' • '<' expr expr ')'
   72     | '(' • '>' expr expr ')'
   73     | '(' • tGE expr expr ')'
   74     | '(' • tLE expr expr ')'
   75     | '(' • tNE expr expr ')'
   76     | '(' • tEQ expr expr ')'
   77     | '(' • tAND expr expr ')'
   78     | '(' • tOR expr expr ')'
   79     | '(' • tOBJECTS expr ')'
   80     | '(' • tSIZEOF expr ')'
   82     | '(' • tSET lval expr ')'
   83     | '(' • '?' lval ')'
   84     | '(' • '@' exprs ')'
   85     | '(' • '@' ')'
   86     | '(' • expr exprs ')'
   87     | '(' • expr ')'
   90 lval: '(' • tINDEX expr expr ')'
   91 function_def: '(' • tFUNCTION '(' function_return_type ')' decls_insts ')'
   92             | '(' • tFUNCTION '(' function_return_type function_args ')' decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tBLOCK       shift, and go to state 60
    tLOOP        shift, and go to state 61
    tSTOP        shift, and go to state 62
    tNEXT        shift, and go to state 63
    tRETURN      shift, and go to state 64
    tIF          shift, and go to state 65
    tREAD        shift, and go to state 66
    tNULL        shift, and go to state 36
    tSET         shift, and go to state 67
    tINDEX       shift, and go to state 68
    tOBJECTS     shift, and go to state 69
    tSIZEOF      shift, and go to state 70
    tFUNCTION    shift, and go to state 71
    tPRINT       shift, and go to state 72
    tPRINTLN     shift, and go to state 73
    tAND         shift, and go to state 74
    tOR          shift, and go to state 75
    '~'          shift, and go to state 76
    tGE          shift, and go to state 77
    tLE          shift, and go to state 78
    tEQ          shift, and go to state 79
    tNE          shift, and go to state 80
    '>'          shift, and go to state 81
    '<'          shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    '/'          shift, and go to state 86
    '%'          shift, and go to state 87
    '('          shift, and go to state 55
    '?'          shift, and go to state 89
    '@'          shift, and go to state 90

    expr          go to state 91
    lval          go to state 45
    function_def  go to state 46


State 96

   40 insts: insts inst •

    $default  reduce using rule 40 (insts)


State 97

   22 function_type: '(' function_return_type '(' • types ')' ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    '('           shift, and go to state 16

    type            go to state 146
    referable_type  go to state 18
    function_type   go to state 19
    types           go to state 147
    ref_type        go to state 20
    ref_type_void   go to state 21


State 98

   21 function_type: '(' function_return_type ')' •

    $default  reduce using rule 21 (function_type)


State 99

   37 decl: '(' type tIDENTIFIER ')' •

    $default  reduce using rule 37 (decl)


State 100

   38 decl: '(' type tIDENTIFIER expr • ')'

    ')'  shift, and go to state 148


State 101

    7 fdecl: '(' tEXTERNAL type tIDENTIFIER ')' •

    $default  reduce using rule 7 (fdecl)


State 102

    8 fdecl: '(' tFORWARD type tIDENTIFIER ')' •

    $default  reduce using rule 8 (fdecl)


State 103

   12 fdecl: '(' tPUBLIC tIDENTIFIER expr ')' •

    $default  reduce using rule 12 (fdecl)


State 104

   11 fdecl: '(' tPUBLIC tVAR tIDENTIFIER expr • ')'

    ')'  shift, and go to state 149


State 105

    9 fdecl: '(' tPUBLIC type tIDENTIFIER ')' •

    $default  reduce using rule 9 (fdecl)


State 106

   10 fdecl: '(' tPUBLIC type tIDENTIFIER expr • ')'

    ')'  shift, and go to state 150


State 107

   39 decl: '(' tVAR tIDENTIFIER expr ')' •

    $default  reduce using rule 39 (decl)


State 108

   55 block: '(' tBLOCK decls_insts • ')'

    ')'  shift, and go to state 151


State 109

   53 inst: '(' tLOOP expr • inst ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 95

    inst          go to state 152
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 110

   45 inst: '(' tSTOP tINTEGER • ')'

    ')'  shift, and go to state 153


State 111

   46 inst: '(' tSTOP ')' •

    $default  reduce using rule 46 (inst)


State 112

   47 inst: '(' tNEXT tINTEGER • ')'

    ')'  shift, and go to state 154


State 113

   48 inst: '(' tNEXT ')' •

    $default  reduce using rule 48 (inst)


State 114

   50 inst: '(' tRETURN ')' •

    $default  reduce using rule 50 (inst)


State 115

   49 inst: '(' tRETURN expr • ')'

    ')'  shift, and go to state 155


State 116

   51 inst: '(' tIF expr • inst ')'
   52     | '(' tIF expr • inst inst ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 95

    inst          go to state 156
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 117

   62 expr: '(' tREAD ')' •

    $default  reduce using rule 62 (expr)


State 118

   90 lval: '(' • tINDEX expr expr ')'

    tINDEX  shift, and go to state 68


State 119

   82 expr: '(' tSET lval • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 157
    lval          go to state 45
    function_def  go to state 46


State 120

   90 lval: '(' tINDEX expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 158
    lval          go to state 45
    function_def  go to state 46


State 121

   79 expr: '(' tOBJECTS expr • ')'

    ')'  shift, and go to state 159


State 122

   80 expr: '(' tSIZEOF expr • ')'

    ')'  shift, and go to state 160


State 123

   91 function_def: '(' tFUNCTION '(' • function_return_type ')' decls_insts ')'
   92             | '(' tFUNCTION '(' • function_return_type function_args ')' decls_insts ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 47
    '('           shift, and go to state 16

    type                  go to state 48
    referable_type        go to state 18
    function_type         go to state 19
    function_return_type  go to state 161
    ref_type              go to state 20
    ref_type_void         go to state 21


State 124

   43 inst: '(' tPRINT exprs • ')'
   56 exprs: exprs • expr

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 162

    expr          go to state 163
    lval          go to state 45
    function_def  go to state 46


State 125

   57 exprs: expr •

    $default  reduce using rule 57 (exprs)


State 126

   44 inst: '(' tPRINTLN exprs • ')'
   56 exprs: exprs • expr

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 164

    expr          go to state 163
    lval          go to state 45
    function_def  go to state 46


State 127

   77 expr: '(' tAND expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 165
    lval          go to state 45
    function_def  go to state 46


State 128

   78 expr: '(' tOR expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 166
    lval          go to state 45
    function_def  go to state 46


State 129

   65 expr: '(' '~' expr • ')'

    ')'  shift, and go to state 167


State 130

   73 expr: '(' tGE expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 168
    lval          go to state 45
    function_def  go to state 46


State 131

   74 expr: '(' tLE expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 169
    lval          go to state 45
    function_def  go to state 46


State 132

   76 expr: '(' tEQ expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 170
    lval          go to state 45
    function_def  go to state 46


State 133

   75 expr: '(' tNE expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 171
    lval          go to state 45
    function_def  go to state 46


State 134

   72 expr: '(' '>' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 172
    lval          go to state 45
    function_def  go to state 46


State 135

   71 expr: '(' '<' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 173
    lval          go to state 45
    function_def  go to state 46


State 136

   64 expr: '(' '+' expr • ')'
   66     | '(' '+' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 174

    expr          go to state 175
    lval          go to state 45
    function_def  go to state 46


State 137

   63 expr: '(' '-' expr • ')'
   67     | '(' '-' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 176

    expr          go to state 177
    lval          go to state 45
    function_def  go to state 46


State 138

   68 expr: '(' '*' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 178
    lval          go to state 45
    function_def  go to state 46


State 139

   69 expr: '(' '/' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 179
    lval          go to state 45
    function_def  go to state 46


State 140

   70 expr: '(' '%' expr • expr ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55

    expr          go to state 180
    lval          go to state 45
    function_def  go to state 46


State 141

   83 expr: '(' '?' lval • ')'

    ')'  shift, and go to state 181


State 142

   85 expr: '(' '@' ')' •

    $default  reduce using rule 85 (expr)


State 143

   56 exprs: exprs • expr
   84 expr: '(' '@' exprs • ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 182

    expr          go to state 163
    lval          go to state 45
    function_def  go to state 46


State 144

   87 expr: '(' expr ')' •

    $default  reduce using rule 87 (expr)


State 145

   56 exprs: exprs • expr
   86 expr: '(' expr exprs • ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 55
    ')'          shift, and go to state 183

    expr          go to state 163
    lval          go to state 45
    function_def  go to state 46


State 146

   26 types: type •

    $default  reduce using rule 26 (types)


State 147

   22 function_type: '(' function_return_type '(' types • ')' ')'
   25 types: types • type

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    '('           shift, and go to state 16
    ')'           shift, and go to state 184

    type            go to state 185
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 148

   38 decl: '(' type tIDENTIFIER expr ')' •

    $default  reduce using rule 38 (decl)


State 149

   11 fdecl: '(' tPUBLIC tVAR tIDENTIFIER expr ')' •

    $default  reduce using rule 11 (fdecl)


State 150

   10 fdecl: '(' tPUBLIC type tIDENTIFIER expr ')' •

    $default  reduce using rule 10 (fdecl)


State 151

   55 block: '(' tBLOCK decls_insts ')' •

    $default  reduce using rule 55 (block)


State 152

   53 inst: '(' tLOOP expr inst • ')'

    ')'  shift, and go to state 186


State 153

   45 inst: '(' tSTOP tINTEGER ')' •

    $default  reduce using rule 45 (inst)


State 154

   47 inst: '(' tNEXT tINTEGER ')' •

    $default  reduce using rule 47 (inst)


State 155

   49 inst: '(' tRETURN expr ')' •

    $default  reduce using rule 49 (inst)


State 156

   51 inst: '(' tIF expr inst • ')'
   52     | '(' tIF expr inst • inst ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 95
    ')'          shift, and go to state 187

    inst          go to state 188
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 157

   82 expr: '(' tSET lval expr • ')'

    ')'  shift, and go to state 189


State 158

   90 lval: '(' tINDEX expr expr • ')'

    ')'  shift, and go to state 190


State 159

   79 expr: '(' tOBJECTS expr ')' •

    $default  reduce using rule 79 (expr)


State 160

   80 expr: '(' tSIZEOF expr ')' •

    $default  reduce using rule 80 (expr)


State 161

   91 function_def: '(' tFUNCTION '(' function_return_type • ')' decls_insts ')'
   92             | '(' tFUNCTION '(' function_return_type • function_args ')' decls_insts ')'

    '('  shift, and go to state 191
    ')'  shift, and go to state 192

    function_args  go to state 193
    function_arg   go to state 194


State 162

   43 inst: '(' tPRINT exprs ')' •

    $default  reduce using rule 43 (inst)


State 163

   56 exprs: exprs expr •

    $default  reduce using rule 56 (exprs)


State 164

   44 inst: '(' tPRINTLN exprs ')' •

    $default  reduce using rule 44 (inst)


State 165

   77 expr: '(' tAND expr expr • ')'

    ')'  shift, and go to state 195


State 166

   78 expr: '(' tOR expr expr • ')'

    ')'  shift, and go to state 196


State 167

   65 expr: '(' '~' expr ')' •

    $default  reduce using rule 65 (expr)


State 168

   73 expr: '(' tGE expr expr • ')'

    ')'  shift, and go to state 197


State 169

   74 expr: '(' tLE expr expr • ')'

    ')'  shift, and go to state 198


State 170

   76 expr: '(' tEQ expr expr • ')'

    ')'  shift, and go to state 199


State 171

   75 expr: '(' tNE expr expr • ')'

    ')'  shift, and go to state 200


State 172

   72 expr: '(' '>' expr expr • ')'

    ')'  shift, and go to state 201


State 173

   71 expr: '(' '<' expr expr • ')'

    ')'  shift, and go to state 202


State 174

   64 expr: '(' '+' expr ')' •

    $default  reduce using rule 64 (expr)


State 175

   66 expr: '(' '+' expr expr • ')'

    ')'  shift, and go to state 203


State 176

   63 expr: '(' '-' expr ')' •

    $default  reduce using rule 63 (expr)


State 177

   67 expr: '(' '-' expr expr • ')'

    ')'  shift, and go to state 204


State 178

   68 expr: '(' '*' expr expr • ')'

    ')'  shift, and go to state 205


State 179

   69 expr: '(' '/' expr expr • ')'

    ')'  shift, and go to state 206


State 180

   70 expr: '(' '%' expr expr • ')'

    ')'  shift, and go to state 207


State 181

   83 expr: '(' '?' lval ')' •

    $default  reduce using rule 83 (expr)


State 182

   84 expr: '(' '@' exprs ')' •

    $default  reduce using rule 84 (expr)


State 183

   86 expr: '(' expr exprs ')' •

    $default  reduce using rule 86 (expr)


State 184

   22 function_type: '(' function_return_type '(' types ')' • ')'

    ')'  shift, and go to state 208


State 185

   25 types: types type •

    $default  reduce using rule 25 (types)


State 186

   53 inst: '(' tLOOP expr inst ')' •

    $default  reduce using rule 53 (inst)


State 187

   51 inst: '(' tIF expr inst ')' •

    $default  reduce using rule 51 (inst)


State 188

   52 inst: '(' tIF expr inst inst • ')'

    ')'  shift, and go to state 209


State 189

   82 expr: '(' tSET lval expr ')' •

    $default  reduce using rule 82 (expr)


State 190

   90 lval: '(' tINDEX expr expr ')' •

    $default  reduce using rule 90 (lval)


State 191

   95 function_arg: '(' • type tIDENTIFIER ')'

    tTYPE_INT     shift, and go to state 7
    tTYPE_DOUBLE  shift, and go to state 8
    tTYPE_STRING  shift, and go to state 9
    tTYPE_VOID    shift, and go to state 10
    '('           shift, and go to state 16

    type            go to state 210
    referable_type  go to state 18
    function_type   go to state 19
    ref_type        go to state 20
    ref_type_void   go to state 21


State 192

   91 function_def: '(' tFUNCTION '(' function_return_type ')' • decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 34 (decls_insts)

    decls_insts   go to state 211
    decls         go to state 39
    decl          go to state 40
    insts         go to state 41
    inst          go to state 42
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 193

   92 function_def: '(' tFUNCTION '(' function_return_type function_args • ')' decls_insts ')'
   93 function_args: function_args • function_arg

    '('  shift, and go to state 191
    ')'  shift, and go to state 212

    function_arg  go to state 213


State 194

   94 function_args: function_arg •

    $default  reduce using rule 94 (function_args)


State 195

   77 expr: '(' tAND expr expr ')' •

    $default  reduce using rule 77 (expr)


State 196

   78 expr: '(' tOR expr expr ')' •

    $default  reduce using rule 78 (expr)


State 197

   73 expr: '(' tGE expr expr ')' •

    $default  reduce using rule 73 (expr)


State 198

   74 expr: '(' tLE expr expr ')' •

    $default  reduce using rule 74 (expr)


State 199

   76 expr: '(' tEQ expr expr ')' •

    $default  reduce using rule 76 (expr)


State 200

   75 expr: '(' tNE expr expr ')' •

    $default  reduce using rule 75 (expr)


State 201

   72 expr: '(' '>' expr expr ')' •

    $default  reduce using rule 72 (expr)


State 202

   71 expr: '(' '<' expr expr ')' •

    $default  reduce using rule 71 (expr)


State 203

   66 expr: '(' '+' expr expr ')' •

    $default  reduce using rule 66 (expr)


State 204

   67 expr: '(' '-' expr expr ')' •

    $default  reduce using rule 67 (expr)


State 205

   68 expr: '(' '*' expr expr ')' •

    $default  reduce using rule 68 (expr)


State 206

   69 expr: '(' '/' expr expr ')' •

    $default  reduce using rule 69 (expr)


State 207

   70 expr: '(' '%' expr expr ')' •

    $default  reduce using rule 70 (expr)


State 208

   22 function_type: '(' function_return_type '(' types ')' ')' •

    $default  reduce using rule 22 (function_type)


State 209

   52 inst: '(' tIF expr inst inst ')' •

    $default  reduce using rule 52 (inst)


State 210

   95 function_arg: '(' type • tIDENTIFIER ')'

    tIDENTIFIER  shift, and go to state 214


State 211

   91 function_def: '(' tFUNCTION '(' function_return_type ')' decls_insts • ')'

    ')'  shift, and go to state 215


State 212

   92 function_def: '(' tFUNCTION '(' function_return_type function_args ')' • decls_insts ')'

    tINTEGER     shift, and go to state 32
    tDOUBLE      shift, and go to state 33
    tIDENTIFIER  shift, and go to state 34
    tSTRING      shift, and go to state 35
    tNULL        shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 34 (decls_insts)

    decls_insts   go to state 216
    decls         go to state 39
    decl          go to state 40
    insts         go to state 41
    inst          go to state 42
    block         go to state 43
    expr          go to state 44
    lval          go to state 45
    function_def  go to state 46


State 213

   93 function_args: function_args function_arg •

    $default  reduce using rule 93 (function_args)


State 214

   95 function_arg: '(' type tIDENTIFIER • ')'

    ')'  shift, and go to state 217


State 215

   91 function_def: '(' tFUNCTION '(' function_return_type ')' decls_insts ')' •

    $default  reduce using rule 91 (function_def)


State 216

   92 function_def: '(' tFUNCTION '(' function_return_type function_args ')' decls_insts • ')'

    ')'  shift, and go to state 218


State 217

   95 function_arg: '(' type tIDENTIFIER ')' •

    $default  reduce using rule 95 (function_arg)


State 218

   92 function_def: '(' tFUNCTION '(' function_return_type function_args ')' decls_insts ')' •

    $default  reduce using rule 92 (function_def)
